{"ast":null,"code":"function randomNoRep(studentList) {\n  var i; //create array with available students\n\n  var availableStudents = []; //calculate available students\n\n  for (i = 0; i < studentList.length; i++) {\n    if (studentList[i].counter === 0) {\n      availableStudents.push(studentList[i]);\n    }\n  } //if all students have been selected, unable to select\n\n\n  if (availableStudents.length === 0) {\n    alert('There are no more available students.');\n    return null;\n  } // generate random index\n\n\n  var randomIndex = Math.floor(Math.random() * availableStudents.length); // add 1 to counter after student has been chosen\n\n  availableStudents[randomIndex].counter++; //return the random index\n\n  return availableStudents[randomIndex];\n}\n\nexport default randomNoRep;","map":{"version":3,"sources":["/Users/verazhong/Desktop/applab/socrates/src/components/randomNoRep.js"],"names":["randomNoRep","studentList","i","availableStudents","length","counter","push","alert","randomIndex","Math","floor","random"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,WAArB,EAAkC;AAC9B,MAAIC,CAAJ,CAD8B,CAE9B;;AACA,MAAMC,iBAAiB,GAAG,EAA1B,CAH8B,CAI9B;;AACA,OAAID,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACD,WAAW,CAACG,MAAtB,EAA6BF,CAAC,EAA9B,EAAiC;AAC7B,QAAGD,WAAW,CAACC,CAAD,CAAX,CAAeG,OAAf,KAA2B,CAA9B,EAAgC;AAC5BF,MAAAA,iBAAiB,CAACG,IAAlB,CAAuBL,WAAW,CAACC,CAAD,CAAlC;AACH;AACJ,GAT6B,CAU9B;;;AACA,MAAGC,iBAAiB,CAACC,MAAlB,KAA6B,CAAhC,EAAkC;AAC9BG,IAAAA,KAAK,CAAC,uCAAD,CAAL;AACA,WAAO,IAAP;AACH,GAd6B,CAe9B;;;AACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,iBAAiB,CAACC,MAA7C,CAApB,CAhB8B,CAkB9B;;AACAD,EAAAA,iBAAiB,CAACK,WAAD,CAAjB,CAA+BH,OAA/B,GAnB8B,CAoB9B;;AACA,SAAOF,iBAAiB,CAACK,WAAD,CAAxB;AACH;;AAED,eAAeR,WAAf","sourcesContent":["function randomNoRep(studentList) {\n    var i;\n    //create array with available students\n    const availableStudents = [];\n    //calculate available students\n    for(i=0;i<studentList.length;i++){\n        if(studentList[i].counter === 0){\n            availableStudents.push(studentList[i]);\n        }\n    }\n    //if all students have been selected, unable to select\n    if(availableStudents.length === 0){\n        alert('There are no more available students.');\n        return null;\n    }\n    // generate random index\n    const randomIndex = Math.floor(Math.random() * availableStudents.length);\n\n    // add 1 to counter after student has been chosen\n    availableStudents[randomIndex].counter ++;\n    //return the random index\n    return availableStudents[randomIndex];\n}\n\nexport default randomNoRep;\n"]},"metadata":{},"sourceType":"module"}